[{"path":[]},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"etiquette-and-conduct","dir":"","previous_headings":"","what":"Etiquette and conduct","title":"Contributing to this R package","text":"Contributors maintainers expected abide Bioconductor Code Conduct instructions adapted (Bioconductor contributor guidelines) (BioJulia contributor guidelines)","code":""},{"path":[]},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"reporting-bugs","dir":"","previous_headings":"How can I contribute?","what":"Reporting Bugs","title":"Contributing to this R package","text":"Following guidelines help us better understand report, replicate issues, track source problems.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"before-creating-a-bug-report","dir":"","previous_headings":"How can I contribute? > Reporting Bugs","what":"Before creating a bug report:","title":"Contributing to this R package","text":"Please following: Check GitHub issues package find open issue describes problem, kindly add comment let others know experiencing issue. open issue already exists problem kindly create new issue. Note: find Closed issue seems like thing ’re experiencing, open new issue include link original issue body new one.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"how-to-create-a-good-new-bug-report","dir":"","previous_headings":"How can I contribute? > Reporting Bugs","what":"How to create a (good) new bug report:","title":"Contributing to this R package","text":"Bugs tracked GitHub issues. creating bug report, please following: Explain problem Use clear descriptive title issue identify problem. Describe exact steps reproduce problem many details possible. Provide specific example. (Includes links pastebin, gists .) ’re providing snippets issue, use Markdown code blocks. Describe behaviour observed following steps Point exactly problem behaviour. Explain behaviour expected see instead . OPTIONALLY: Include screenshots animated GIFs show following described steps. Provide additional context problem (may always apply) problem started recently, can reproduce problem older versions? know recent package version problem doesn’t happen? Provide details often problem happens. Provide details conditions normally happens. problem happen files projects ? problem happen working local remote files? problem happen files specific type, size, encoding? anything else special files using? Include details configuration environment Packages versions using? (see R command sessionInfo()) Name version OS ’re using?","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"suggesting-enhancements","dir":"","previous_headings":"How can I contribute?","what":"Suggesting enhancements","title":"Contributing to this R package","text":"Enhancements include new features well minor improvements existing functionality. Following suggestions help maintainers community understand suggestion find related suggestions.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"before-submitting-an-enhancement-proposal","dir":"","previous_headings":"How can I contribute? > Suggesting enhancements","what":"Before Submitting An Enhancement Proposal","title":"Contributing to this R package","text":"Perform cursory issue search see enhancement already suggested. , open new issue per guidance . … Add comment existing issue instead opening new one. closed, take time understand (’s ok ask! :) ), consider whether anything changed makes reason outdated. can think convincing reason reconsider enhancement, feel free open new issue per guidance .","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"how-to-submit-a-good-new-enhancement-proposal","dir":"","previous_headings":"How can I contribute? > Suggesting enhancements","what":"How to submit a (good) new enhancement proposal","title":"Contributing to this R package","text":"Enhancement proposals tracked GitHub issues. Explain enhancement Use clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Provide specific examples demonstrate steps. Include copy/pasteable snippets use examples, Markdown code blocks. want change current behaviour… Describe current behaviour. Explain behaviour expected see instead . proposed change alter APIs existing exposed methods/types? , may cause dependency issues breakages, maintainer need consider versioning next release. OPTIONALLY: Include screenshots animated GIFs. Provide additional context enhancement Explain enhancement useful users isn’t something can implemented separate package. know projects enhancement exists? Include details configuration environment Package versions (see R sessionInfo()). Name version OS","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"making-pull-requests","dir":"","previous_headings":"How can I contribute?","what":"Making Pull Requests","title":"Contributing to this R package","text":"packages can developed locally, contributions suggested via pull requests. Let’s use git flow kind approach. Development version done master branch merged release release. (https://guides.github.com/introduction/flow/) start working code, often good idea open enhancement suggestion Hit ‘Fork’ button repositories page create forked copy target package Github account. ensure work experiments won’t hinder users released stable package. can clone fork package work machine using git. ’s example cloning, assuming already forked LimROTS: Git download “clone” fork put local folder. beyond scope document describe good git github use specific detail, folks Git GitHub already done wonderfully sites. additional questions, see contact details microbiome.github.io.","code":"git clone https://github.com/<YOUR_GITHUB_USERNAME_HERE>/LimROTS.git"},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"how-to-make-good-code-contributions-and-new-pull-requests","dir":"","previous_headings":"How can I contribute? > Making Pull Requests","what":"How to make (good) code contributions and new Pull-Requests","title":"Contributing to this R package","text":"code changes making bug-fix, need checkout bug-fix branch last release tag. making feature addition enhancement, checkout branch master. See information (ask package maintainer 😄). Please comment liberally complex pieces internal code facilitate comprehension. pull request Describe changes pull request Provide clear, simple, descriptive title. include issue numbers PR title. implemented new features behaviour Provide description addition many details possible. Provide justification addition. Provide runnable example use addition. lets reviewers others try feature merged makes ’s way release. changed current behaviour… Describe behaviour prior changes Describe behaviour changes justify made changes. change alter APIs existing exposed methods/types? , may cause dependency issues breakages, maintainer need consider versioning next release. implementing changes intended increase performance, provide results simple performance benchmark exercise demonstrating improvement. Especially changes make code less legible.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"reviews-and-merging","dir":"","previous_headings":"How can I contribute? > Making Pull Requests","what":"Reviews and merging","title":"Contributing to this R package","text":"can open pull request early push changes ready, can editing locally make pull request finished - . pull request ready Github, mention one maintainers repo comment e.g. @antagomir ask review . can also use Github’s review feature. review code documentation pull request, assess . pull request accepted merged : dedicated package maintainers approve pull request merging. automated build system confirms unit tests pass without issues. may also reviewers package maintainers want make changes pull request merge . Take time understand request made, freely discuss reviewers.","code":""},{"path":[]},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"git-commit-messages","dir":"","previous_headings":"Styleguides","what":"Git Commit messages","title":"Contributing to this R package","text":"Use present tense (“Add feature” “Added feature”). Use imperative mood (“Move cursor …” “Moves cursor …”). Limit first line 72 characters less. Reference issues pull requests liberally first line. 🎨 :art: improving format/structure code 🐎 :racehorse: improving performance 📝 :memo: writing docs 🐧 :penguin: fixing something Linux 🍎 :apple: fixing something macOS 🏁 :checkered_flag: fixing something Windows 🐛 :bug: fixing bug 🔥 :fire: removing code files 💚 :green_heart: fixing CI build ✅ :white_check_mark: adding tests ⬆️ :arrow_up: upgrading dependencies ⬇️ :arrow_down: downgrading dependencies ❗ :exclamation: removing warnings depreciations","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"additional-style-suggestions","dir":"","previous_headings":"Styleguides","what":"Additional style suggestions","title":"Contributing to this R package","text":"Indent 4 spaces. Separate logical blocks code one blank line. Although common acceptable short single-line functions defined together consecutive lines blank lines . Function names, apart constructors, camelCase. Generally try keep lines 80-columns, unless splitting long line onto multiple lines makes harder read.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"how-to-develop-the-package","dir":"","previous_headings":"","what":"How to develop the package","title":"Contributing to this R package","text":"minimal workflow package development follows. Fork (Git) LimROTS R package [https://github.com/AliYoussef96/LimROTS] Clone (Git) fork LimROTS; cloned earlier, make sure branch sync upstream repository (see next section) Test package (R): devtools::test() (fix possible issues) Test examples: devtools::run_examples() Update documentation (convert R files man/ files): devtools::document() Build package: devtools::build() Run Bioconductor checks: BiocCheck::BiocCheck() (details Bioconductor formatting guidelines automated checks, see Bioconductor package guidelines instructions Bioconductor packages: Development, Maintenance, Peer Review) Load updated package: devtools::load_all() Install package: devtools::install() package passes build checks, commit & push fork, make pull request (PR) original repository. trigger additional automated checks. fail, inspect reason, fix accordingly, update PR (simply commit + push new material fork; PR already open). Final checks R tests; run command line (replace “R” custom R path necessary): R CMD buildLimROTS/` R CMD check LimROTS_x.y.z.tar.gz R CMD BiocCheck LimROTS_x.y.z.tar.gz R CMD INSTALL LimROTS_x.y.z.tar.gz updating package, remember following (applicable): update documentation update unit tests (tests/) update vignettes (vignettes) run checks accepted pull request, check updates needed :","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"sync-with-the-official-github-development-version","dir":"","previous_headings":"","what":"Sync with the official Github development version","title":"Contributing to this R package","text":"new pull request, check fork sync main development version. Command line version goes follows.","code":"# Add the main repository as your _upstream_ `git remote add upstream git@github.com:AliYoussef96/LimROTS.git`  # Fetch the changes from upstream (main version) and origin (your fork): git fetch --all  # Merge those changes to your fork: git merge origin/master git merge upstream/master  # Finally, commit and push to origin (your version) # then open a new PR from the Github site if relevant. git push origin master"},{"path":"https://aliyoussef96.github.io/LimROTS/CONTRIBUTING.html","id":"syncing-with-the-official-bioconductor-version","dir":"","previous_headings":"","what":"Syncing with the official Bioconductor version","title":"Contributing to this R package","text":"usually done main developer. case, upstream set Bioconductor: git remote add upstream git@git.bioconductor.org:packages/LimROTS.git Workflow sync github bioc versions Bioconductor Build reports (devel) Package page Bioconductor","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/articles/LimROTS.html","id":"how-limrots-work","dir":"Articles","previous_headings":"","what":"How LimROTS Work?","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"LimROTS approach initially uses limma package Ritchie et al. (2015) simulate intensity data proteins metabolites. linear model subsequently fitted using design matrix. Empirical Bayes variance shrinking implemented. obtain moderated t-statistics (f-statistics), adjusted standard error (SEpost=√(s2.post)*unscaledSD)(SEpost = √(s2.post) * unscaled SD) feature computed, along regression coefficient feature (indicating impact variations experimental settings). , adapting reproducibility-optimized technique known ROTS Suomi et al. (2017) establish optimality based largest overlap top-ranked features within group-preserving bootstrap datasets (refer Elo et al. (2008) information reproducibility-optimization). Finally based optimized parameters α1{\\alpha1} α2{\\alpha2} equation used calculates final statistics: t_α(p)=β(p)α1+α2×SEpost(p)t\\_{\\alpha(p)} = \\frac{\\beta_{(p)}} {\\alpha1 + \\alpha2 \\times SEpost_{(p)}} tα(p)t_{\\alpha(p)} final statistics feature, β(p){\\beta_{(p)}} coefficient, SEpost(p)SEpost_{(p)} adjusted standard error. LimROTS generates p-values permutation samples using implementation available qvalue package Storey et al. (2024), along internal implementation FDR adapted ROTS package Suomi et al. (2017). Additionally, qvalue package used calculate q-values, proportion true null p-values set bootstrap method. recommend using permutation-derived p-values qvalues.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/articles/LimROTS.html","id":"computational-power","dir":"Articles","previous_headings":"","what":"Computational Power","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"number samples, features, bootstrap iterations, k, denotes top list size ranking, four primary elements determine amount computing resources required optimisation process LimROTS. therefore advised use least 4 cores execute LimROTS since uses parallel processing implementation bootstrapping step. optimisation process sequential maybe time-consuming, based k value; planned modified order make upcoming LimROTS version faster.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/articles/LimROTS.html","id":"parameter-description-for-limrots","dir":"Articles","previous_headings":"","what":"Parameter Description for LimROTS","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"LimROTS takes several parameters, called correctly obtain desired output. x: input data, can SummarizedExperiment object matrix rows represent features (e.g., genes, proteins) columns represent samples. values log-transformed. B: integer representing amount bootstrap iterations. Default 1000. K: optional integer representing top list size ranking. specified, set one-fourth number features. a1: Optional numeric value used optimization process. defined user, optimization occurs. a2: Optional numeric value used optimization process. defined user, optimization occurs [0,1]. log: Logical, indicating whether data already log-transformed. Default TRUE. progress: Logical, indicating whether display progress bar bootstrap sampling. Default FALSE. verbose: Logical, indicating whether display messages function’s execution. Default TRUE. meta.info: data frame containing sample-level metadata, row corresponds sample. include grouping variable specified group.name. x (data) SummarizedExperiment object, meta.info must vector metadata needed model run can retrieved using colData(). group.name: string specifying column meta.info represents groups conditions comparison. seed.cl: integer specifying seed randomization; provided, default 1234. cluster: parallel cluster object distributed computation, e.g., created makeCluster(). Default 2. formula.str: formula string modeling. include “~ 0 + …” exclude intercept model. model parameters must present meta.info. robust: Logical, indicating whether robust fitting used. Default TRUE. trend: Logical, indicating whether include trend fitting differential expression analysis. Default TRUE. permutating.group: Logical, TRUE, permutation calculating null distribution performed permuting target group specified group.name Preserving sample information. FALSE, entire sample information retrieved meta.info permuted (recommended set TRUE).","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/articles/LimROTS.html","id":"ups1-case-study","dir":"Articles","previous_headings":"","what":"UPS1 Case Study","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"demonstrate LimROTS’ ability detect true negatives complex scenarios, using DIA proteomics data UPS1-spiked E. coli protein mixture Gotti et al. (2022) includes 48 samples: 24 samples analyzed Spectronaut another 24 analyzed ScaffoldDIA software, total 1656 proteins. Eight different concentrations UPS1 used (0.1 50 fmol), grouped two categories: low concentrations (0.1–2.5 fmol, labeled Conc. 2, 12 Samples software) high concentrations (5–50 fmol, labeled Conc. 1, 12 Samples software). synthetic, unbalanced fake batches assigned samples. assignment follows ratio : Additionally, 100 E. coli proteins randomly selected, effect size 10 added . expected outcome UPS1 human proteins identified truly significant, none remaining proteins show significant differences concentration groups. scenario resembles real-world case experiment involves unbalanced batch assignments , instance, uneven gender ratio among samples. LimROTS can take SummarizedExperiment object metadata needed run model. example importing UPS1.Case4 data available LimROTS. original source dataset can found Gotti et al. (2022)","code":"#>     #>      1  2 #>   F 18  6 #>   M  6 18 # Load necessary packages library(LimROTS) library(parallel) library(ggplot2) # Load the dataset data(\"UPS1.Case4\") print(UPS1.Case4) #> class: SummarizedExperiment  #> dim: 1656 48  #> metadata(0): #> assays(1): norm #> rownames(1656): O00762_HUMAN O76070_HUMAN ... Q59385_ECOLI Q93K97_ECOLI #> rowData names(2): GeneID Description #> colnames(48): UPS1_0_1fmol_inj1_x UPS1_0_1fmol_inj2_x ... #>   UPS1_50fmol_inj2_y UPS1_50fmol_inj3_y #> colData names(4): SampleID tool Conc. fake.batch"},{"path":"https://aliyoussef96.github.io/LimROTS/articles/LimROTS.html","id":"run-limrots","dir":"Articles","previous_headings":"UPS1 Case Study","what":"Run LimROTS","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"Although seed.cl internally control seed randomization parallel bootstrapping process. advisable establish consistent seed prior executing LimROTS NOTE: “instance, configure number bootstrap iterations (B) count top-ranked features reproducibility optimization (K) 100 , order minimize example’s run-time. actual analyses, advisable utilize greater number bootstraps (e.g., 1000). Also, number cores use recommend use least 4 cores.","code":"set.seed(1234, kind = \"default\") # Set metadata and formula for LimROTS analysis meta.info <- c(\"Conc.\", \"tool\", \"fake.batch\") B <- 100 # Number of bootstrap samples K <- 100 # Set the value for K based on the data size K <- floor(K) num_cores <- 2 # Number of cores for parallel processing cluster <- makeCluster(num_cores) # Create a parallel cluster group.name <- \"Conc.\" formula.str <- \"~ 0 + Conc. + tool + fake.batch\" # Formula for group comparison  # Run LimROTS analysis with trend and robust settings enabled limrots.result <- LimROTS(     x = UPS1.Case4,     B = B, K = K, meta.info = meta.info,     cluster = cluster, group.name = group.name,     formula.str = formula.str, trend = TRUE,      robust = TRUE, permutating.group = FALSE,      seed.cl = 1234 ) #> Data is SummarizedExperiment object #> Assay: norm will be used #> Bootstrapping samples #>   |                                                                              |                                                                      |   0% #> Optimizing parameters #> Warning: One very small variance detected, has been offset away from zero #> Calculating p-values #> Calculating FDR"},{"path":"https://aliyoussef96.github.io/LimROTS/articles/LimROTS.html","id":"volcano-plot-with-ggplot2","dir":"Articles","previous_headings":"UPS1 Case Study","what":"Volcano Plot with ggplot2","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"Utilising Volcano plot mapping human UPS1 proteins q-values 1% 5%, evident LimROTS accurately identified majority actual positive proteins detecting limited number simulated E.coli proteins.","code":"# Create a data frame from the LimROTS results limrots.result.df <- data.frame(     proteins = row.names(limrots.result$data),     LimROTS.FC = limrots.result$corrected.logf,     q.value = limrots.result$q_values$qvalues ) # Mark proteins as true positives (HUMAN UPS1 proteins) limrots.result.df$TP <- ifelse(grepl(\"HUMAN\", limrots.result.df$proteins),     \"HUMAN_TP\", \"ECOLI_FP\" )  # Create a volcano plot ggplot(limrots.result.df, aes(     x = LimROTS.FC, y = -log10(q.value),     color = factor(TP) )) +     geom_point(alpha = 0.8) +     theme_bw() +     labs(         title = \"Volcano Plot\", x = \"Log Fold Change\", y = \"-Log10 q.value\",         color = \"True Positive\"     ) +     scale_color_manual(values = c(\"grey\", \"red\")) +     geom_hline(yintercept = -log10(0.05), linetype = \"dashed\", color = \"blue\")+     geom_hline(yintercept = -log10(0.01), linetype = \"dashed\", color = \"black\")"},{"path":"https://aliyoussef96.github.io/LimROTS/articles/LimROTS.html","id":"quality-control-plots","dir":"Articles","previous_headings":"UPS1 Case Study","what":"Quality Control Plots","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"LimROTS generates p-values permutation samples, along FDR. Additionally, qvalue package used calculate q-values Benjamini-Hochberg adjusted p-values based permutation-derived p-values. can used Quality Control LimROTS results. recommend using permutation-derived p-values qvalues, though generally similar FDR Benjamini-Hochberg adjusted p-values.","code":"## Quality Control Plots  # Plot of q-values plot(limrots.result$q_values,     main = \"Q-values\", xlab = \"Index\",     ylab = \"Q-value\" ) # Histogram of q-values hist(limrots.result$q_values,     main = \"Q-value Distribution\",     xlab = \"Q-value\", col = \"lightgreen\", border = \"white\" ) # Summary of q-values summary(limrots.result$q_values) sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] parallel  stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #> [1] ggplot2_3.5.1    LimROTS_0.99.0   BiocStyle_2.32.1 #>  #> loaded via a namespace (and not attached): #>  [1] SummarizedExperiment_1.34.0 gtable_0.3.5                #>  [3] xfun_0.48                   bslib_0.8.0                 #>  [5] Biobase_2.64.0              lattice_0.22-6              #>  [7] vctrs_0.6.5                 tools_4.4.1                 #>  [9] generics_0.1.3              stats4_4.4.1                #> [11] tibble_3.2.1                fansi_1.0.6                 #> [13] highr_0.11                  pkgconfig_2.0.3             #> [15] Matrix_1.7-0                desc_1.4.3                  #> [17] S4Vectors_0.42.1            rngtools_1.5.2              #> [19] lifecycle_1.0.4             GenomeInfoDbData_1.2.12     #> [21] farver_2.1.2                stringr_1.5.1               #> [23] compiler_4.4.1              textshaping_0.4.0           #> [25] munsell_0.5.1               statmod_1.5.0               #> [27] codetools_0.2-20            GenomeInfoDb_1.40.1         #> [29] htmltools_0.5.8.1           sass_0.4.9                  #> [31] yaml_2.3.10                 pkgdown_2.1.1               #> [33] pillar_1.9.0                crayon_1.5.3                #> [35] jquerylib_0.1.4             DelayedArray_0.30.1         #> [37] cachem_1.1.0                limma_3.60.6                #> [39] doRNG_1.8.6                 iterators_1.0.14            #> [41] abind_1.4-8                 foreach_1.5.2               #> [43] tidyselect_1.2.1            digest_0.6.37               #> [45] stringi_1.8.4               reshape2_1.4.4              #> [47] dplyr_1.1.4                 bookdown_0.40               #> [49] labeling_0.4.3              splines_4.4.1               #> [51] fastmap_1.2.0               grid_4.4.1                  #> [53] colorspace_2.1-1            cli_3.6.3                   #> [55] SparseArray_1.4.8           magrittr_2.0.3              #> [57] S4Arrays_1.4.1              utf8_1.2.4                  #> [59] withr_3.0.1                 scales_1.3.0                #> [61] UCSC.utils_1.0.0            rmarkdown_2.28              #> [63] XVector_0.44.0              httr_1.4.7                  #> [65] matrixStats_1.4.1           qvalue_2.36.0               #> [67] ragg_1.3.3                  evaluate_1.0.0              #> [69] knitr_1.48                  GenomicRanges_1.56.1        #> [71] IRanges_2.38.1              doParallel_1.0.17           #> [73] rlang_1.1.4                 Rcpp_1.0.13                 #> [75] glue_1.8.0                  BiocManager_1.30.25         #> [77] BiocGenerics_0.50.0         jsonlite_1.8.9              #> [79] plyr_1.8.9                  R6_2.5.1                    #> [81] MatrixGenerics_1.16.0       systemfonts_1.1.0           #> [83] fs_1.6.4                    zlibbioc_1.50.0"},{"path":[]},{"path":"https://aliyoussef96.github.io/LimROTS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ali Mostafa Anwar. Author, maintainer. Leo Lahti. Author, thesis advisor. Akewak Jeba. Author, contributor. Eleanor Coffey. Author, thesis advisor.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mostafa Anwar , Lahti L, Jeba , Coffey E (2024). LimROTS: Hybrid Method Integrating Empirical Bayes Reproducibility-Optimized Statistics Robust Analysis Proteomics Metabolomics Data. R package version 0.99.0, https://aliyoussef96.github.io/LimROTS/, https://github.com/AliYoussef96/LimROTS.","code":"@Manual{,   title = {LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data},   author = {Ali {Mostafa Anwar} and Leo Lahti and Akewak Jeba and Eleanor Coffey},   year = {2024},   note = {R package version 0.99.0, https://aliyoussef96.github.io/LimROTS/},   url = {https://github.com/AliYoussef96/LimROTS}, }"},{"path":"https://aliyoussef96.github.io/LimROTS/index.html","id":"limrots-a-hybrid-method-integrating-empirical-bayes-and-reproducibility-optimized-statistics-for-robust-analysis-of-proteomics-and-metabolomics-data","dir":"","previous_headings":"","what":"A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","title":"A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"Differential expression analysis prevalent method utilised examination diverse biological data. reproducibility-optimized test statistic (ROTS) (Tomi Suomi et al.,) developed modified t-statistic based data’s intrinsic characteristics ranks features according statistical significance differential expression two groups, shown f-statistic. Focusing proteomics metabolomics, current ROTS implementation account technical biological covariates MS batches gender differences among samples. Consequently, developed LimROTS, employs reproducibility-optimized test statistic utilizing limma empirical bayes (Ritchie et al.,) methodology simulate complex experimental designs.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"devel version LimROTS can installed GitHub follows:","code":"# Install LimROTS if not already installed if (!requireNamespace(\"LimROTS\", quietly = TRUE)) {   remotes::install_github(\"AliYoussef96/LimROTS\") } remotes::install_github(\"AliYoussef96/LimROTS\")"},{"path":"https://aliyoussef96.github.io/LimROTS/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"Please note LimROTS project released Contributor Code Conduct. contributing project, agree abide terms. Contributions welcome form feedback, issues pull requests. can find contributor guidelines LimROTS .","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data","text":"Please note LimROTS made possible thanks many R rOpenGov software authors, cited vignettes describing package. package developed using following resources: usethis generate initial template. Continuous code testing performed GitHub actions include R CMD check, Code coverage assessment possible thanks codecov. documentation website automatically updated thanks pkgdown. documentation formatted thanks devtools roxygen2.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Boot_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel processing handling function — Boot_parallel","title":"Parallel processing handling function — Boot_parallel","text":"Parallel processing handling function","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Boot_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel processing handling function — Boot_parallel","text":"","code":"Boot_parallel(   cluster,   seed.cl,   samples,   data,   formula.str,   group.name,   groups,   meta.info,   a1,   a2,   trend,   robust,   permutating.group )"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Boot_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel processing handling function — Boot_parallel","text":"cluster parallel cluster object distributed computation, e.g., created makeCluster(). Default 2. seed.cl integer specifying seed randomization; provided, default 1234. samples bootstrapped samples matrix data SummarizedExperiment object matrix rows represent features (e.g., genes, proteins) columns represent samples. values log-transformed. formula.str formula string used covariates present meta. info modeling. include \"~ 0 + ...\" exclude intercept model. group.name string specifying column meta.info represents groups conditions comparison. groups groups information meta.info meta.info data frame containing sample-level metadata, row corresponds sample. include grouping variable specified group.name. x SummarizedExperiment object, meta.info must vector metadata needed model run can retrieved using colData(). a1 Optional numeric value used optimization process. defined user, optimization occurs. a2 Optional numeric value used optimization process. defined user, optimization occurs. trend indicating whether include trend fitting differential expression analysis. Default TRUE. see eBayes. robust indicating whether robust fitting used. Default TRUE, see eBayes. permutating.group Logical, TRUE, permutation calculating null distribution performed permuting target group specified group.name. FALSE, entire meta.info permuted (recommended set FALSE).","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Boot_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel processing handling function — Boot_parallel","text":"list containing: D, S, pD, pS bootstrapped data permuted data.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if SummarizedExperiment or data is correct — Check_SummarizedExperiment","title":"Check if SummarizedExperiment or data is correct — Check_SummarizedExperiment","text":"Check SummarizedExperiment data correct","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if SummarizedExperiment or data is correct — Check_SummarizedExperiment","text":"","code":"Check_SummarizedExperiment(data.exp, meta.info, group.name)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if SummarizedExperiment or data is correct — Check_SummarizedExperiment","text":"data.exp matrix-like object SummarizedExperiment containing data analyzed. meta.info Data frame. Metadata associated samples (columns data.exp). data.exp SummarizedExperiment, group.name Character. Column name meta.info defines groups conditions comparison.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if SummarizedExperiment or data is correct — Check_SummarizedExperiment","text":"list data , groups meta.info","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_meta_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if meta info is correct — Check_meta_info","title":"Check if meta info is correct — Check_meta_info","text":"Check meta info correct","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_meta_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if meta info is correct — Check_meta_info","text":"","code":"Check_meta_info(meta.info, data, log)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_meta_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if meta info is correct — Check_meta_info","text":"meta.info Data frame. Metadata associated samples (columns data.exp). data.exp SummarizedExperiment, data matrix-like object SummarizedExperiment containing data analyzed. log Logical, indicating whether data already log-transformed. Default TRUE.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Check_meta_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if meta info is correct — Check_meta_info","text":"Logical","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/LimROTS.html","id":null,"dir":"Reference","previous_headings":"","what":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","text":"LimROTS: Hybrid Method Integrating Empirical Bayes Reproducibility-Optimized Statistics Robust Analysis Proteomics Metabolomics Data","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/LimROTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","text":"","code":"LimROTS(   x,   B = 1000,   K = NULL,   a1 = NULL,   a2 = NULL,   log = TRUE,   progress = FALSE,   verbose = TRUE,   meta.info = NULL,   cluster = NULL,   group.name = NULL,   formula.str = NULL,   seed.cl = 1234,   robust = TRUE,   trend = TRUE,   permutating.group = FALSE )"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/LimROTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","text":"x SummarizedExperiment object matrix rows represent features (e.g., proteins, metabolites) columns represent samples. values log-transformed. B integer representing amount bootstrap iterations. Default 1000. K optional integer representing top list size ranking. specified, set one-fourth number features. a1 Optional numeric value used optimization process. defined user, optimization occurs. a2 Optional numeric value used optimization process. defined user, optimization occurs. log Logical, indicating whether data already log-transformed. Default TRUE. progress Logical, indicating whether display progress bar function's execution. Default FALSE. verbose Logical, indicating whether display messages function's execution. Default TRUE. meta.info data frame containing sample-level metadata, row corresponds sample. include grouping variable specified group.name. x SummarizedExperiment object, meta.info must vector metadata needed model run can retrieved using colData(). cluster parallel cluster object distributed computation, e.g., created makeCluster(). Default 2. group.name string specifying column meta.info represents groups conditions comparison. formula.str formula string modeling. include \"~ 0 + ...\" exclude intercept model. model parameters must present meta.info. seed.cl integer specifying seed randomization; provided, default 1234. robust indicating whether robust fitting used. Default TRUE, see eBayes. trend indicating whether include trend fitting differential expression analysis. Default TRUE. see eBayes. permutating.group Logical, TRUE, permutation calculating null distribution performed permuting target group specified group.name Preserving sample information. FALSE, entire sample information retrieved meta.info permuted (recommended set TRUE).","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/LimROTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","text":"object class \"list\" following elements: data original data matrix. B number bootstrap samples used. d optimized statistics feature. logfc Log-fold change values groups. pvalue P-values computed based permutation samples. FDR False discovery rate estimates. a1 Optimized parameter used differential expression ranking. a2 Optimized parameter used differential expression ranking. k Top list size used ranking. corrected.logfc estimate log2-fold-change corresponding effect corrected s model see topTable. q_values Estimated q-values using qvalue package. BH.pvalue Benjamini-Hochberg adjusted p-values.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/LimROTS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","text":"LimROTS approach initially uses limma package functionality simulate intensity data proteins metabolites. linear model subsequently fitted using design matrix. Empirical Bayes variance shrinking implemented. obtain moderated t-statistics, adjusted standard error \\(SEpost = √(s2.post) \\times unscaled SD\\) feature computed, along regression coefficient feature (indicating impact variations experimental settings). , adapting reproducibility-optimized technique known ROTS establish optimality based largest overlap top-ranked features within group-preserving bootstrap datasets, Finally based optimized parameters \\(\\alpha1\\) \\(\\alpha2\\) equation used calculates final statistics: $$t_{\\alpha_{(p)}} = \\frac{\\beta_{(p)}}          {\\alpha1 + \\alpha2 \\times SEpost_{(p)}}$$\\(t_{\\alpha_{(p)}}\\) final statistics feature, \\(\\beta_{(p)}\\) coefficient, \\(SEpost_{(p)}\\) adjusted standard error. LimROTS generates p-values permutation samples using implementation available qvalue package, along internal implementation FDR adapted ROTS package. Additionally, qvalue package used calculate q-values, proportion true null p-values set bootstrap method pi0est. recommend using permutation-derived p-values qvalues.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/LimROTS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","text":"Ritchie, M.E., Phipson, B., Wu, D., Hu, Y., Law, C.W., Shi, W., Smyth, G.K. (2015). limma powers differential expression analyses RNA-sequencing microarray studies. Nucleic Acids Research 43(7), e47 Suomi T, Seyednasrollah F, Jaakkola M, Faux T, Elo L (2017). “ROTS: R package reproducibility-optimized statistical testing. ” PLoS computational biology, 13(5), e1005562. doi:10.1371/journal.pcbi.1005562 https://doi.org/10.1371/journal.pcbi.1005562, http://www.ncbi.nlm.nih.gov/pubmed/28542205 Elo LL, Filen S, Lahesmaa R, Aittokallio T. Reproducibility-optimized test statistic ranking genes microarray studies. IEEE/ACM Trans Comput Biol Bioinform. 2008;5(3):423-431. doi:10.1109/tcbb.2007.1078","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/LimROTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LimROTS: A Hybrid Method Integrating Empirical Bayes and Reproducibility-Optimized Statistics for Robust Analysis of Proteomics and Metabolomics Data — LimROTS","text":"","code":"# Example usage:  data <- data.frame(matrix(rnorm(500), nrow = 100, ncol = 10)) # Simulated data meta.info <- data.frame(     group = factor(rep(1:2, each = 5)),     row.names = colnames(data) ) formula.str <- \"~ 0 + group\" result <- LimROTS(data,     meta.info = meta.info, group.name = \"group\",     formula.str = formula.str, B = 10 ) #> No top list size K given, using 25 #> Bootstrapping samples #>    |                                                                               |                                                                      |   0% #> No cluster found; only two cores will be used! #> Optimizing parameters #> Calculating p-values #> Calculating FDR #> Error in quantile.default(pi0, prob = 0.1): missing values and NaN's not allowed if 'na.rm' is FALSE"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Linear Modeling with Covariates using Limma — Limma_bootstrap","title":"Perform Linear Modeling with Covariates using Limma — Limma_bootstrap","text":"function performs linear modeling using Limma package accounting covariates specified meta.info. supports two-group comparisons multi-group analysis, incorporating covariates design matrix.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Linear Modeling with Covariates using Limma — Limma_bootstrap","text":"","code":"Limma_bootstrap(x, group.name, meta.info, formula.str, trend, robust)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Linear Modeling with Covariates using Limma — Limma_bootstrap","text":"x list containing two data matrices rows represent features (e.g., genes, proteins) columns represent samples. list contain least two matrices pairwise group comparison. group.name character string indicating name group variable meta.info used analysis. meta.info data frame containing metadata samples. includes sample grouping covariates included model. formula.str string specifying formula used model fitting. follow standard R formula syntax (e.g., ~ covariate1 + covariate2). trend logical value indicating whether allow intensity-dependent trend prior variance. robust logical value indicating whether use robust fitting procedure protect outliers.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Linear Modeling with Covariates using Limma — Limma_bootstrap","text":"list containing following elements: d vector test statistics (log-fold changes F-statistics) feature. s vector standard deviations feature, adjusted empirical Bayes procedure.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_bootstrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Linear Modeling with Covariates using Limma — Limma_bootstrap","text":"function first combines data matrices different groups prepares design matrix based covariates specified meta.info using provided formula. fits linear model using Limma, computes contrasts groups, applies empirical Bayes moderation. two-group comparisons, function returns log-fold changes associated statistics. multi-group settings single covariate, calculates pairwise contrasts moderated F-statistics.","code":""},{"path":[]},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Linear Modeling with Covariates using Limma — Limma_fit","title":"Perform Linear Modeling with Covariates using Limma — Limma_fit","text":"function performs linear modeling using Limma package, incorporating covariates model fitting process. designed handle two-group comparisons multi-group settings covariates.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Linear Modeling with Covariates using Limma — Limma_fit","text":"","code":"Limma_fit(x, group.name, meta.info, formula.str, trend, robust)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Linear Modeling with Covariates using Limma — Limma_fit","text":"x list containing two data matrices rows represent features (e.g., genes, proteins) columns represent samples. list contain least two matrices pairwise group comparison. group.name character string indicating name group variable inmeta.info used analysis. meta.info data frame containing metadata samples. includes sample grouping covariates included model. formula.str string specifying formula used model fitting. follow standard R formula syntax (e.g., ~ covariate1 + covariate2). trend logical value indicating whether allow intensity-dependent trend prior variance. robust logical value indicating whether use robust fitting procedure protect outliers.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Linear Modeling with Covariates using Limma — Limma_fit","text":"list containing following elements: d vector test statistics (log-fold changes F-statistics) feature. s vector standard deviations feature, adjusted t empirical Bayes procedure. corrected.logfc log-fold changes feature fitting model.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Linear Modeling with Covariates using Limma — Limma_fit","text":"function combines data matrices different groups fits linear model using covariates provided meta.info. two-group comparisons, function computes contrasts two groups applies empirical Bayes moderation. multi-group analysis single covariate, pairwise contrasts computed, moderated F-statistic calculated feature.","code":""},{"path":[]},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_permutating.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Permutation-Based Linear Modeling with Covariates using Limma — Limma_permutating","title":"Perform Permutation-Based Linear Modeling with Covariates using Limma — Limma_permutating","text":"function performs linear modeling using Limma package permutation covariates evaluate test statistics random assignments. handles two-group comparisons multi-group settings.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_permutating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Permutation-Based Linear Modeling with Covariates using Limma — Limma_permutating","text":"","code":"Limma_permutating(   x,   group.name,   meta.info,   formula.str,   trend,   robust,   permutating.group )"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_permutating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Permutation-Based Linear Modeling with Covariates using Limma — Limma_permutating","text":"x list containing two data matrices rows represent features (e.g., genes, proteins) columns represent samples. list contain least two matrices pairwise group comparison. group.name character string indicating name group variable meta.info used analysis. meta.info data frame containing metadata samples. includes sample grouping covariates included model. formula.str string specifying formula used model fitting. follow standard R formula syntax (e.g., ~ covariate1 + covariate2). trend logical value indicating whether allow intensity-dependent trend prior variance. robust logical value indicating whether use robust fitting procedure protect outliers. permutating.group Logical, TRUE, permutation calculating null distribution performed permuting target group specified group.name. FALSE, entire meta.info permuted (recommended set TRUE).","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_permutating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Permutation-Based Linear Modeling with Covariates using Limma — Limma_permutating","text":"list containing following elements: d vector test statistics (log-fold changes F-statistics) feature. s vector standard deviations feature, adjusted empirical Bayes procedure.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Limma_permutating.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Permutation-Based Linear Modeling with Covariates using Limma — Limma_permutating","text":"function combines data matrices different groups permutes covariates meta.infobefore fitting linear model using Limma. Permutation helps assess covariates behave random conditions, providing null distribution test statistics. two-group comparisons, function computes contrasts two groups applies empirical Bayes moderation. multi-group analysis single covariate, pairwise contrasts computed, moderated F-statistic calculated feature.","code":""},{"path":[]},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Optimizing.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize Parameters Based on Overlap Calculations — Optimizing","title":"Optimize Parameters Based on Overlap Calculations — Optimizing","text":"function optimizes parameters calculating overlaps observed permuted data multiple values smoothing constant (ssq) single-label replicate (SLR) comparison.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Optimizing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize Parameters Based on Overlap Calculations — Optimizing","text":"","code":"Optimizing(B, ssq, N, D, S, pD, pS, verbose, progress)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Optimizing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize Parameters Based on Overlap Calculations — Optimizing","text":"B Integer. Number bootstrap samples resampling iterations. ssq Numeric vector. Smoothing constants evaluated. N Integer vector. Number top values consider overlap calculation. D Numeric matrix. Observed data values. S Numeric matrix. Standard errors related values observed data. pD Numeric matrix. Permuted data values. pS Numeric matrix. Standard errors related values permuted data. verbose Logical. TRUE, progress messages displayed. progress Logical. TRUE, progress bar shown.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Optimizing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize Parameters Based on Overlap Calculations — Optimizing","text":"list containing optimal parameters: a1: Optimal smoothing constant 1 SLR. a2: SLR flag (1 smoothing constant optimal, 0 SLR optimal). k: Optimal number top values consider overlap. R: Optimal overlap value. Z: Optimal z-score. ztable: Matrix z-scores evaluated parameters.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/Optimizing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimize Parameters Based on Overlap Calculations — Optimizing","text":"function calculates overlaps range smoothing constants identifies optimal set parameters maximizing z-score-based metric, compares overlap observed data permuted data. computes overlap matrices observed (D S) permuted (pD pS) data returns optimal parameters based highest z-score.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/SanityChecK.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanity Check for Input Data and Parameters — SanityChecK","title":"Sanity Check for Input Data and Parameters — SanityChecK","text":"function performs series checks initial setups input data, metadata, parameters, ensuring everything correctly formatted downstream analysis.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/SanityChecK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanity Check for Input Data and Parameters — SanityChecK","text":"","code":"SanityChecK(   x,   B = 1000,   K = NULL,   a1 = NULL,   a2 = NULL,   meta.info = NULL,   group.name = NULL,   formula.str = NULL,   verbose = TRUE,   log = TRUE )"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/SanityChecK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanity Check for Input Data and Parameters — SanityChecK","text":"x matrix-like object SummarizedExperiment containing data analyzed. B Integer. Number bootstrap samples resampling iterations. Default 1000. K Integer. Top list size. NULL, set quarter number rows data matrix. Default NULL. a1, a2 Optional numeric parameters related optimization. meta.info Data frame. Metadata associated samples (columns data.exp). data.exp SummarizedExperiment, meta.info can vector colData column names use. group.name Character. Column name meta.info defines groups conditions comparison. formula.str Optional character string representing formula model. verbose Logical, indicating whether display messages function's execution. Default TRUE. log Logical, indicating whether data already log-transformed. Default TRUE.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/SanityChecK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanity Check for Input Data and Parameters — SanityChecK","text":"list containing: meta.info: Processed metadata. data: Processed data matrix. groups: Numeric factor vector indicating group assignments. K: Top list size used analysis.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/SanityChecK.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sanity Check for Input Data and Parameters — SanityChecK","text":"function checks whether input data metadata correct format, processes metadata SummarizedExperiment object provided, ensures group information correctly specified. top list size (K) provided, defaults quarter number rows data.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/UPS1.Case4.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectronaut and ScaffoldDIA UPS1 Spiked Dataset case 4 — UPS1.Case4","title":"Spectronaut and ScaffoldDIA UPS1 Spiked Dataset case 4 — UPS1.Case4","text":" SummarizedExperiment object containing DIA proteomics data UPS1-spiked E. coli proteins, processed using Spectronaut ScaffoldDIA separately, merged.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/UPS1.Case4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spectronaut and ScaffoldDIA UPS1 Spiked Dataset case 4 — UPS1.Case4","text":"instance  SummarizedExperiment class following assays: norm assay includes log2 protein intensities calculated averaging peptides derived protein object also contains colData rowData: colData DataFrame metadata samples. rowData DataFrame metadata proteins. colData contains following columns: SampleID Unique identifier sample. Conc Experimental condition group sample , representing different conc. UPS1-spiked proteins. tool software tool used, Spectronaut ScaffoldDIA. fake.batch fake digestion batch.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/UPS1.Case4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spectronaut and ScaffoldDIA UPS1 Spiked Dataset case 4 — UPS1.Case4","text":"Generated spectronaut ScaffoldDIA separately. using mixed mode acquisition method FASTA mode demonstration purposes.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/UPS1.Case4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spectronaut and ScaffoldDIA UPS1 Spiked Dataset case 4 — UPS1.Case4","text":"Gotti, C., Roux-Dalvai, F., Joly-Beauparlant, C., Mangnier, L., Leclercq, M., & Droit, . (2022). DIA proteomics data UPS1-spiked E.coli protein mixture processed six software tools. Data Brief (Vol. 41, p. 107829). Elsevier BV. https://doi.org/10.1016/j.dib.2022.107829","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapS.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Bootstrap Samples — bootstrapS","title":"Generate Bootstrap Samples — bootstrapS","text":"function generates bootstrap samples input metadata. samples replacement within group defined metadata, optionally adjusts paired groups.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Bootstrap Samples — bootstrapS","text":"","code":"bootstrapS(B, meta.info, group.name)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Bootstrap Samples — bootstrapS","text":"B Integer. number bootstrap samples generate. meta.info Data frame. Metadata containing sample information, row corresponds sample. group.name Character. name column meta.info defines grouping variable samples.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Bootstrap Samples — bootstrapS","text":"matrix dimension B x n, n number samples. row corresponds bootstrap sample, entry resampled row name metadata.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Bootstrap Samples — bootstrapS","text":"function works resampling row names metadata group separately.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Bootstrap Samples — bootstrapS","text":"","code":"# Example usage: set.seed(123) meta.info <- data.frame(     group = rep(c(\"A\", \"B\"), each = 5),     row.names = paste0(\"Sample\", 1:10) ) bootstrapS(     B = 10, meta.info = meta.info, group.name = \"group\" ) #>       [,1]      [,2]      [,3]      [,4]      [,5]      [,6]       [,7]       #>  [1,] \"Sample3\" \"Sample3\" \"Sample2\" \"Sample2\" \"Sample3\" \"Sample10\" \"Sample9\"  #>  [2,] \"Sample5\" \"Sample3\" \"Sample3\" \"Sample1\" \"Sample4\" \"Sample6\"  \"Sample6\"  #>  [3,] \"Sample2\" \"Sample1\" \"Sample3\" \"Sample4\" \"Sample1\" \"Sample8\"  \"Sample10\" #>  [4,] \"Sample1\" \"Sample1\" \"Sample2\" \"Sample3\" \"Sample4\" \"Sample10\" \"Sample10\" #>  [5,] \"Sample5\" \"Sample5\" \"Sample4\" \"Sample5\" \"Sample2\" \"Sample6\"  \"Sample6\"  #>  [6,] \"Sample1\" \"Sample2\" \"Sample4\" \"Sample4\" \"Sample3\" \"Sample6\"  \"Sample7\"  #>  [7,] \"Sample5\" \"Sample5\" \"Sample3\" \"Sample1\" \"Sample4\" \"Sample6\"  \"Sample6\"  #>  [8,] \"Sample3\" \"Sample5\" \"Sample3\" \"Sample2\" \"Sample5\" \"Sample10\" \"Sample8\"  #>  [9,] \"Sample4\" \"Sample2\" \"Sample2\" \"Sample4\" \"Sample4\" \"Sample6\"  \"Sample8\"  #> [10,] \"Sample5\" \"Sample2\" \"Sample3\" \"Sample2\" \"Sample5\" \"Sample10\" \"Sample8\"  #>       [,8]       [,9]      [,10]      #>  [1,] \"Sample6\"  \"Sample7\" \"Sample8\"  #>  [2,] \"Sample10\" \"Sample8\" \"Sample7\"  #>  [3,] \"Sample9\"  \"Sample7\" \"Sample10\" #>  [4,] \"Sample8\"  \"Sample6\" \"Sample7\"  #>  [5,] \"Sample8\"  \"Sample6\" \"Sample10\" #>  [6,] \"Sample6\"  \"Sample7\" \"Sample9\"  #>  [7,] \"Sample8\"  \"Sample9\" \"Sample6\"  #>  [8,] \"Sample7\"  \"Sample7\" \"Sample7\"  #>  [9,] \"Sample8\"  \"Sample6\" \"Sample8\"  #> [10,] \"Sample9\"  \"Sample9\" \"Sample9\""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapSamples.limRots.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Stratified Bootstrap Samples for limRots — bootstrapSamples.limRots","title":"Generate Stratified Bootstrap Samples for limRots — bootstrapSamples.limRots","text":"function generates stratified bootstrap samples based groupings additional factors metadata. function ensures samples drawn proportionally based strata defined interaction factor columns metadata.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapSamples.limRots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Stratified Bootstrap Samples for limRots — bootstrapSamples.limRots","text":"","code":"bootstrapSamples.limRots(B, meta.info, group.name)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapSamples.limRots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Stratified Bootstrap Samples for limRots — bootstrapSamples.limRots","text":"B Integer. number bootstrap samples generate. meta.info Data frame. Metadata containing sample information, row corresponds sample. Factor columns meta.info used define strata sampling. group.name Character. name column meta.info defines grouping variable samples.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapSamples.limRots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Stratified Bootstrap Samples for limRots — bootstrapSamples.limRots","text":"matrix dimension B x n, n number samples. row corresponds bootstrap sample, entry resampled row name metadata, stratified group additional factors.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapSamples.limRots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Stratified Bootstrap Samples for limRots — bootstrapSamples.limRots","text":"function works first identifying factors meta.info data frame used create strata sampling. Within group defined group.name, function samples according strata proportions, ensuring samples drawn correct groups strata proportional manner.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/bootstrapSamples.limRots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Stratified Bootstrap Samples for limRots — bootstrapSamples.limRots","text":"","code":"# Example usage: set.seed(123) meta.info <- data.frame(     group = rep(c(1, 2), each = 5),     batch = rep(c(\"A\", \"B\"), 5),     row.names = paste0(\"Sample\", 1:10) ) meta.info$batch <- as.factor(meta.info$batch) bootstrapSamples.limRots(B = 10, meta.info = meta.info, group.name = \"group\") #>       [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      #>  [1,] \"Sample5\" \"Sample5\" \"Sample5\" \"Sample4\" \"Sample2\" \"Sample9\" \"Sample9\" #>  [2,] \"Sample3\" \"Sample3\" \"Sample1\" \"Sample4\" \"Sample2\" \"Sample9\" \"Sample7\" #>  [3,] \"Sample1\" \"Sample1\" \"Sample1\" \"Sample2\" \"Sample4\" \"Sample9\" \"Sample7\" #>  [4,] \"Sample5\" \"Sample3\" \"Sample1\" \"Sample2\" \"Sample2\" \"Sample7\" \"Sample9\" #>  [5,] \"Sample5\" \"Sample1\" \"Sample1\" \"Sample4\" \"Sample2\" \"Sample7\" \"Sample9\" #>  [6,] \"Sample5\" \"Sample3\" \"Sample1\" \"Sample4\" \"Sample2\" \"Sample7\" \"Sample9\" #>  [7,] \"Sample1\" \"Sample1\" \"Sample5\" \"Sample2\" \"Sample4\" \"Sample7\" \"Sample7\" #>  [8,] \"Sample5\" \"Sample3\" \"Sample3\" \"Sample2\" \"Sample4\" \"Sample9\" \"Sample9\" #>  [9,] \"Sample3\" \"Sample3\" \"Sample1\" \"Sample4\" \"Sample4\" \"Sample7\" \"Sample7\" #> [10,] \"Sample1\" \"Sample3\" \"Sample1\" \"Sample4\" \"Sample4\" \"Sample7\" \"Sample7\" #>       [,8]       [,9]       [,10]      #>  [1,] \"Sample8\"  \"Sample10\" \"Sample6\"  #>  [2,] \"Sample10\" \"Sample10\" \"Sample6\"  #>  [3,] \"Sample8\"  \"Sample6\"  \"Sample8\"  #>  [4,] \"Sample10\" \"Sample8\"  \"Sample6\"  #>  [5,] \"Sample6\"  \"Sample10\" \"Sample6\"  #>  [6,] \"Sample10\" \"Sample6\"  \"Sample8\"  #>  [7,] \"Sample6\"  \"Sample10\" \"Sample8\"  #>  [8,] \"Sample10\" \"Sample10\" \"Sample6\"  #>  [9,] \"Sample8\"  \"Sample10\" \"Sample10\" #> [10,] \"Sample10\" \"Sample8\"  \"Sample10\""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Overlaps Between Observed and Permuted Data — calOverlaps","title":"Calculate Overlaps Between Observed and Permuted Data — calOverlaps","text":"function calculates overlap observed permuted data two sets comparisons. computes ratio overlap pairs vectors (res1/res2 pres1/pres2) sorting values.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Overlaps Between Observed and Permuted Data — calOverlaps","text":"","code":"calOverlaps(D, S, pD, pS, nrow, N, N_len, ssq, B, overlaps, overlaps_P)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Overlaps Between Observed and Permuted Data — calOverlaps","text":"D Numeric vector. Observed data values (e.g., differences). S Numeric vector. Standard errors related values associated observed data. pD Numeric vector. Permuted data values (e.g., differences). pS Numeric vector. Standard errors related values associated permuted data. nrow Integer. Number rows block data. N Integer vector. Number top values consider overlap calculation. N_len Integer. Length N vector. ssq Numeric. small constant added standard errors stability. B Integer. Number bootstrap samples resampling iterations. overlaps Numeric matrix. Matrix store overlap results observed data. overlaps_P Numeric matrix. Matrix store overlap results permuted data.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Overlaps Between Observed and Permuted Data — calOverlaps","text":"list containing two matrices: overlaps observed data overlaps_P permuted data.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Overlaps Between Observed and Permuted Data — calOverlaps","text":"function calculates overlaps two sets comparisons: one observed data (res1/res2) one permuted data (pres1/pres2).bootstrap sample, function orders two vectors compared, calculates proportion overlap top N values.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.slr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Overlaps for Single-Label Replicates (SLR) — calOverlaps.slr","title":"Calculate Overlaps for Single-Label Replicates (SLR) — calOverlaps.slr","text":"function computes overlap two sets observed permuted 'values single-label replicates (SLR). calculates proportion overlap pairs vectors (res1/res2 pres1/pres2) sorting .","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.slr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Overlaps for Single-Label Replicates (SLR) — calOverlaps.slr","text":"","code":"calOverlaps.slr(D, pD, nrow, N, N_len, B, overlaps, overlaps_P)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.slr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Overlaps for Single-Label Replicates (SLR) — calOverlaps.slr","text":"D Numeric vector. Observed data values (e.g., differences). pD Numeric vector. Permuted data values. nrow Integer. Number rows block data. N Integer vector. Number top values consider overlap calculation. N_len Integer. Length N vector. B Integer. Number bootstrap samples resampling iterations. overlaps Numeric matrix. Matrix store overlap results observed data. overlaps_P Numeric matrix. Matrix store overlap results permuted data.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.slr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Overlaps for Single-Label Replicates (SLR) — calOverlaps.slr","text":"list containing two matrices: overlaps observed data overlaps_P permuted data.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calOverlaps.slr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Overlaps for Single-Label Replicates (SLR) — calOverlaps.slr","text":"function calculates overlap two sets comparisons: one observed data (res1/res2) one permuted data (pres1/pres2). bootstrap sample, function orders two vectors compared, computes proportion overlap top N values.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calculateFalseDiscoveryRate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate False Discovery Rate (FDR) Using Permuted Values (Adjusted) — calculateFalseDiscoveryRate","title":"Calculate False Discovery Rate (FDR) Using Permuted Values (Adjusted) — calculateFalseDiscoveryRate","text":"function calculates false discovery rate (FDR) comparing observed values permuted values.function sorts observed values, compares permuted data, computes FDR using median permutation results.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calculateFalseDiscoveryRate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate False Discovery Rate (FDR) Using Permuted Values (Adjusted) — calculateFalseDiscoveryRate","text":"","code":"calculateFalseDiscoveryRate(   observedValues,   permutedValues,   showProgress = FALSE )"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calculateFalseDiscoveryRate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate False Discovery Rate (FDR) Using Permuted Values (Adjusted) — calculateFalseDiscoveryRate","text":"observedValues Numeric vector. observed test statistics values evaluated significance. permutedValues Numeric matrix. permuted test statistics values, rows corresponding values observedValues columns representing different permutations. showProgress Logical. TRUE, progress bar shown computation.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calculateFalseDiscoveryRate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate False Discovery Rate (FDR) Using Permuted Values (Adjusted) — calculateFalseDiscoveryRate","text":"numeric vector length observedValues, containing estimated FDR observed value.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/calculateFalseDiscoveryRate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate False Discovery Rate (FDR) Using Permuted Values (Adjusted) — calculateFalseDiscoveryRate","text":"","code":"observedValues <- c(2.5, 1.8, 3.1, 0.7, 2.9) set.seed(123) permutedValues <- matrix(rnorm(5 * 5, mean = 2, sd = 1), nrow = 5) fdr <- calculateFalseDiscoveryRate(observedValues, permutedValues,     showProgress = FALSE ) print(fdr) #> [1] 0.3333333 0.7500000 0.3333333 1.0000000 0.3333333"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/countLargerThan.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Larger Permuted Values (Modified) — countLargerThan","title":"Count Larger Permuted Values (Modified) — countLargerThan","text":"helper function compares observed values permuted values counts number permuted values greater equal observed value.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/countLargerThan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Larger Permuted Values (Modified) — countLargerThan","text":"","code":"countLargerThan(observedVec, permutedVec)"},{"path":"https://aliyoussef96.github.io/LimROTS/reference/countLargerThan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Larger Permuted Values (Modified) — countLargerThan","text":"observedVec Numeric vector. observed values. permutedVec Numeric vector. permuted values compare observed values.","code":""},{"path":"https://aliyoussef96.github.io/LimROTS/reference/countLargerThan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Larger Permuted Values (Modified) — countLargerThan","text":"numeric vector containing counts permuted values greater equal corresponding observed values.","code":""}]
